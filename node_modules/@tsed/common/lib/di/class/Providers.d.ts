import { Registry, RegistryKey, Type } from "@tsed/core";
import { IProvider, TypedProvidersRegistry } from "../interfaces";
import { RegistrySettings } from "../interfaces/RegistrySettings";
import { Provider } from "./Provider";
export declare class Providers extends Registry<Provider<any>, IProvider<any>> {
    /**
     * Internal Map
     * @type {Array}
     */
    private _registries;
    constructor();
    /**
     *
     * @param {string} type
     * @param {Type<Provider<any>>} model
     * @param options
     * @returns {Registry<Provider<any>, IProvider<any>>}
     */
    createRegistry(type: string, model: Type<Provider<any>>, options?: Partial<RegistrySettings>): TypedProvidersRegistry;
    /**
     *
     * @param {string | RegistryKey} target
     * @returns {RegistrySettings | undefined}
     */
    getRegistrySettings(target: string | RegistryKey): RegistrySettings;
    /**
     *
     * @returns {(provider: (any | IProvider<any>), instance?: any) => void}
     */
    createRegisterFn(type: string): (provider: any, instance?: any) => void;
    /**
     *
     * @param {string | RegistryKey} target
     * @returns {Registry<Provider<any>, IProvider<any>>}
     */
    getRegistry(target: string | RegistryKey): TypedProvidersRegistry;
}
