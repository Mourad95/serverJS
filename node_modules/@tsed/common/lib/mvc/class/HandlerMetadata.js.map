{"version":3,"sources":["../src/common/mvc/class/HandlerMetadata.ts"],"names":[],"mappings":"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","file":"HandlerMetadata.js","sourcesContent":["import {NotEnumerable, Store} from \"@tsed/core\";\nimport {ProviderType} from \"../../di/interfaces/ProviderType\";\nimport {ProviderRegistry} from \"../../di/registries/ProviderRegistry\";\nimport {ParamMetadata} from \"../../filters/class/ParamMetadata\";\nimport {EXPRESS_ERR, EXPRESS_NEXT_FN, EXPRESS_REQUEST, EXPRESS_RESPONSE} from \"../../filters/constants\";\nimport {ParamRegistry} from \"../../filters/registries/ParamRegistry\";\nimport {MiddlewareType} from \"../interfaces\";\n\nexport class HandlerMetadata {\n  /**\n   *\n   */\n  @NotEnumerable() private _type: \"function\" | \"middleware\" | \"controller\" = \"function\";\n  /**\n   *\n   * @type {boolean}\n   * @private\n   */\n  @NotEnumerable() private _errorParam: boolean = false;\n  /**\n   *\n   */\n  @NotEnumerable() private _injectable: boolean = false;\n  /**\n   *\n   */\n  @NotEnumerable() private _nextFunction: boolean;\n  /**\n   *\n   */\n  @NotEnumerable() private _useClass: any;\n\n  constructor(private _target: any, private _methodClassName?: string) {\n    this.resolve();\n  }\n\n  /**\n   *\n   */\n  private resolve() {\n    this._useClass = this._target;\n\n    let handler = this._target;\n    let target = this._target;\n\n    if (ProviderRegistry.has(this._target)) {\n      const provider = ProviderRegistry.get(this._target)!;\n      this._type = provider.type;\n\n      if (provider.type === ProviderType.MIDDLEWARE) {\n        this._type = \"middleware\";\n        this._errorParam = Store.from(provider.provide).get(\"middlewareType\") === MiddlewareType.ERROR;\n        this._methodClassName = \"use\";\n        this._useClass = target = provider.useClass;\n      }\n    }\n\n    if (this._methodClassName) {\n      this._injectable = ParamRegistry.isInjectable(target, this._methodClassName);\n      this._nextFunction = ParamRegistry.hasNextFunction(target, this._methodClassName);\n\n      handler = target.prototype[this._methodClassName];\n    }\n\n    if (!this._injectable) {\n      this._errorParam = handler.length === 4;\n      this._nextFunction = handler.length >= 3;\n    }\n  }\n\n  get type() {\n    return this._type;\n  }\n\n  get errorParam(): boolean {\n    return this._errorParam;\n  }\n\n  get injectable(): boolean {\n    return this._injectable;\n  }\n\n  get nextFunction(): boolean {\n    return this._nextFunction;\n  }\n\n  get methodClassName(): string | undefined {\n    return this._methodClassName;\n  }\n\n  get target(): any {\n    return this._target;\n  }\n\n  get services(): ParamMetadata[] {\n    if (this.injectable) {\n      return ParamRegistry.getParams(this._useClass, this.methodClassName);\n    }\n\n    const parameters: any[] = [{service: EXPRESS_REQUEST}, {service: EXPRESS_RESPONSE}];\n\n    if (this.errorParam) {\n      parameters.unshift({service: EXPRESS_ERR});\n    }\n\n    if (this.nextFunction) {\n      parameters.push({service: EXPRESS_NEXT_FN});\n    }\n\n    return parameters;\n  }\n}\n"],"sourceRoot":"../../../"}