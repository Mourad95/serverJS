{"version":3,"sources":["../src/common/mvc/components/LogIncomingRequestMiddleware.ts"],"names":[],"mappings":"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","file":"LogIncomingRequestMiddleware.js","sourcesContent":["import {applyBefore} from \"@tsed/core\";\nimport * as Express from \"express\";\nimport {$log} from \"ts-log-debug\";\nimport {ILoggerSettings} from \"../../config/interfaces/IServerSettings\";\nimport {ServerSettingsService} from \"../../config/services/ServerSettingsService\";\nimport {Req} from \"../../filters/decorators/request\";\nimport {Res} from \"../../filters/decorators/response\";\nimport {Middleware} from \"../decorators/class/middleware\";\nimport {IMiddleware} from \"../interfaces\";\n\n/**\n * @private\n * @middleware\n */\n@Middleware()\nexport class LogIncomingRequestMiddleware implements IMiddleware {\n  private static DEFAULT_FIELDS = [\"reqId\", \"method\", \"url\", \"duration\"];\n\n  private AUTO_INCREMENT_ID = 1;\n  private loggerSettings: ILoggerSettings;\n  private fields: string[];\n  private reqIdBuilder: () => number;\n  private debug: boolean;\n\n  // tslint:disable-next-line: no-unused-variable\n  constructor(serverSettingsService: ServerSettingsService) {\n    this.loggerSettings = serverSettingsService.logger as ILoggerSettings;\n    this.reqIdBuilder = this.loggerSettings.reqIdBuilder || (() => this.AUTO_INCREMENT_ID++);\n    this.fields = this.loggerSettings.requestFields || LogIncomingRequestMiddleware.DEFAULT_FIELDS;\n    this.debug = serverSettingsService.debug;\n  }\n\n  /**\n   * Handle the request.\n   * @param {e.Request} request\n   * @param {e.Response} response\n   */\n  public use(@Req() request: Express.Request, @Res() response: Express.Response): void {\n    this.configureRequest(request);\n\n    this.onLogStart(request);\n\n    applyBefore(response, \"end\", () => this.onLogEnd(request, response));\n  }\n\n  /**\n   * The separate onLogStart() function will allow developer to overwrite the initial request log.\n   * @param {e.Request} request\n   */\n  protected onLogStart(request: Express.Request) {\n    request.log.debug({event: \"start\"});\n  }\n\n  /**\n   * Attach all informations that will be necessary to log the request. Attach a new `request.log` object.\n   * @param request\n   */\n  protected configureRequest(request: Express.Request) {\n    request.id = String(request.id ? request.id : this.reqIdBuilder());\n    request.tsedReqStart = new Date();\n\n    const verbose = (req: Express.Request) => this.requestToObject(req);\n    const info = (req: Express.Request) => this.minimalRequestPicker(req);\n    request.log = {\n      info: (obj: any) => $log.info(this.stringify(request, info)(obj)),\n      debug: (obj: any) => $log.debug(this.stringify(request, verbose)(obj)),\n      warn: (obj: any) => $log.warn(this.stringify(request, verbose)(obj)),\n      error: (obj: any) => $log.error(this.stringify(request, verbose)(obj)),\n      trace: (obj: any) => $log.trace(this.stringify(request, verbose)(obj))\n    };\n  }\n\n  /**\n   * Return complete request info.\n   * @param request\n   * @returns {Object}\n   */\n  protected requestToObject(request: Express.Request): any {\n    return {\n      reqId: request.id,\n      method: request.method,\n      url: request.originalUrl || request.url,\n      duration: this.getDuration(request),\n      headers: request.headers,\n      body: request.body,\n      query: request.query,\n      params: request.params\n    };\n  }\n\n  /**\n   * Return a filtered request from global configuration.\n   * @param request\n   * @returns {Object}\n   */\n  protected minimalRequestPicker(request: Express.Request): any {\n    const info = this.requestToObject(request);\n\n    return this.fields.reduce((acc: any, key: string) => {\n      acc[key] = info[key];\n\n      return acc;\n    }, {});\n  }\n\n  /**\n   * Return the duration between the time when LogIncomingRequest has handle the request and now.\n   * @param request\n   * @returns {number}\n   */\n  protected getDuration(request: Express.Request): number {\n    return new Date().getTime() - request.tsedReqStart.getTime();\n  }\n\n  /**\n   * Stringify a request to JSON.\n   * @param request\n   * @param propertySelector\n   * @returns {(scope: any) => string}\n   */\n  protected stringify(request: Express.Request, propertySelector: (e: Express.Request) => any): (scope: any) => string {\n    return (scope: any = {}) => {\n      if (typeof scope === \"string\") {\n        scope = {message: scope};\n      }\n      scope = Object.assign(scope, propertySelector(request));\n      try {\n        return JSON.stringify(scope, null, this.loggerSettings.jsonIndentation);\n      } catch (er) {\n        $log.error({error: er});\n      }\n\n      return \"\";\n    };\n  }\n\n  /**\n   * Called when the `request.end()` is called by Express.\n   * @param request\n   * @param response\n   */\n  protected onLogEnd(request: Express.Request, response: Express.Response) {\n    setImmediate(() => {\n      /* istanbul ignore else */\n      if (request.id) {\n        if (this.loggerSettings.logRequest) {\n          request.log.info({status: response.statusCode});\n        }\n\n        if (this.debug) {\n          request.log.debug({\n            status: response.statusCode,\n            data: request.getStoredData && request.getStoredData()\n          });\n        }\n        this.cleanRequest(request);\n      }\n    });\n  }\n\n  /**\n   * Remove all data that added with `LogIncomingRequest.configureRequest()`.\n   * @param request\n   */\n  protected cleanRequest(request: Express.Request) {\n    delete request.id;\n    delete request.tagId;\n    delete request.tsedReqStart;\n    request.log = {\n      info: () => {},\n      debug: () => {},\n      warn: () => {},\n      error: () => {},\n      trace: () => {}\n    };\n  }\n}\n"],"sourceRoot":"../../../"}