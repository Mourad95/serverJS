{"version":3,"sources":["../src/common/mvc/services/ExpressRouter.ts"],"names":[],"mappings":";;AAEA,uDAAkD;AASlD;;;;;;;;;;;;;;;;;;;GAmBG;AACH,uBAA8B,MAAiB,EAAE,SAAiB,EAAE,UAAsD;IACxH,OAAO,eAAM,CAAC,aAAa,CAAC,CAAC,MAAM,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;AAC9D,CAAC;AAFD,sCAEC","file":"ExpressRouter.js","sourcesContent":["import {Type} from \"@tsed/core\";\nimport * as Express from \"express\";\nimport {Inject} from \"../../di/decorators/inject\";\n\n/**\n *\n */\nexport type ExpressRouter = Express.Router & {\n  (target: Type<any>, targetKey: string, descriptor: TypedPropertyDescriptor<Function> | number): any;\n};\n\n/**\n * Inject the ExpressRouter (Express.Router) instance.\n *\n * ### Example\n *\n * ```typescript\n * import {ExpressRouter, Service} from \"@tsed/common\";\n *\n * @Controller(\"/\")\n * export default class OtherService {\n *    constructor(@ExpressRouter router: ExpressRouter) {}\n * }\n * ```\n *\n * @param {Type<any>} target\n * @param {string} targetKey\n * @param {TypedPropertyDescriptor<Function> | number} descriptor\n * @returns {any}\n * @decorator\n */\nexport function ExpressRouter(target: Type<any>, targetKey: string, descriptor: TypedPropertyDescriptor<Function> | number) {\n  return Inject(ExpressRouter)(target, targetKey, descriptor);\n}\n"],"sourceRoot":"../../../"}