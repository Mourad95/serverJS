"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var appender_1 = require("../decorators/appender");
var BaseAppender_1 = require("../class/BaseAppender");
/**
 * ## Standard Error Appender
 *
 * This appender writes all log events to the standard error stream.
 *
 * ## Configuration
 *
 * * type - stderr
 * * layout - object (optional, defaults to colouredLayout) - see layouts
 *
 * ## Example
 *
 * ```typescript
 * import {Logger} from "ts-log-debug";
 *
 * const logger = new Logger("loggerName");
 *
 * logger.appenders.set("log-error", {
 *     type: "stderr",
 *     levels: ["error", "warn", "fatal"]
 * });
 * ```
 *
 * @private
 */
var StderrAppender = /** @class */ (function (_super) {
    tslib_1.__extends(StderrAppender, _super);
    function StderrAppender() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.log = process.stderr.write.bind(process.stderr);
        return _this;
    }
    StderrAppender.prototype.write = function (loggingEvent) {
        this.log(this.layout(loggingEvent, this.config.timezoneOffset) + "\n");
    };
    StderrAppender = tslib_1.__decorate([
        appender_1.Appender({ name: "stderr" })
    ], StderrAppender);
    return StderrAppender;
}(BaseAppender_1.BaseAppender));
exports.StderrAppender = StderrAppender;
//# sourceMappingURL=StderrAppender.js.map