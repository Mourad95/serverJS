/// <reference types="express" />
import { ControllerService, ServerSettingsService } from "@tsed/common";
import * as Express from "express";
import { Spec } from "swagger-schema-official";
import { ISwaggerSettings } from "../interfaces";
export declare class SwaggerService {
    private controllerService;
    private serverSettingsService;
    private expressApplication;
    private OPERATION_IDS;
    constructor(controllerService: ControllerService, serverSettingsService: ServerSettingsService, expressApplication: Express.Application);
    /**
     *
     */
    $afterRoutesInit(): void;
    $onServerReady(): void;
    /**
     *
     * @param {ISwaggerSettings} conf
     * @param scope
     */
    private createRouter(conf, scope);
    private middlewareRedirect(path);
    /**
     *
     * @param scope
     * @returns {(req: any, res: any) => any}
     */
    private middlewareIndex(scope);
    /**
     *
     * @param {e.Router} router
     * @param {string} path
     */
    private middlewareCss(path);
    /**
     *
     * @param {e.Router} router
     * @param {string} path
     */
    private middlewareJs(path);
    /**
     *
     * @returns {Spec}
     */
    getOpenAPISpec(conf: ISwaggerSettings): Spec;
    private readSpecPath(path);
    /**
     * Return the global api information.
     * @returns {Info}
     */
    getDefaultSpec(conf: ISwaggerSettings): Spec;
    /**
     *
     * @param paths
     * @param definitions
     * @param ctrl
     * @param endpointUrl
     */
    private buildRoutes(paths, definitions, ctrl, endpointUrl);
    private buildTags(ctrl);
    private getOperationId;
}
