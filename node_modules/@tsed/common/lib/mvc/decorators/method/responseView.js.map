{"version":3,"sources":["../src/common/mvc/decorators/method/responseView.ts"],"names":[],"mappings":";;AAAA,qCAAiC;AACjC,oFAA+E;AAC/E,yCAAoC;AAEpC;;;;;;;;;;;;;;;;;;;;GAoBG;AACH,sBAA6B,QAAgB,EAAE,WAAoB;IACjE,OAAO,YAAK,CAAC,QAAQ,CAAC,CAAC,KAAY,EAAE,EAAE;QACrC,KAAK,CAAC,GAAG,CAAC,+CAAsB,EAAE,EAAC,QAAQ,EAAE,WAAW,EAAC,CAAC,CAAC;QAE3D,OAAO,mBAAQ,CAAC,+CAAsB,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;AACL,CAAC;AAND,oCAMC;AAED;;;;;;;;;;;;;;;;;;;;;GAqBG;AACH,gBAAuB,QAAgB,EAAE,WAAoB;IAC3D,OAAO,YAAY,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;AAC7C,CAAC;AAFD,wBAEC","file":"responseView.js","sourcesContent":["import {Store} from \"@tsed/core\";\nimport {ResponseViewMiddleware} from \"../../components/ResponseViewMiddleware\";\nimport {UseAfter} from \"./useAfter\";\n\n/**\n * Renders a view and sends the rendered HTML string to the client. Optional parameter:\n *\n * * viewOptions, an object whose properties define local variables for the view.\n *\n * The view argument is a string that is the file path of the view file to render.\n * This can be an absolute path, or a path relative to the views setting.\n * If the path does not contain a file extension, then the view engine setting determines the file extension.\n * If the path does contain a file extension, then Express will load the module for the specified template engine (via require())\n * and render it using the loaded module’s __express function.\n *\n * For more information, see [Using template engines with Express](http://expressjs.com/guide/using-template-engines.html).\n *\n * > NOTE: The view argument performs file system operations like reading a file from disk and evaluating Node.js modules,\n * and as so for security reasons should not contain input from the end-user.\n *\n * @param viewPath\n * @param viewOptions\n * @returns {Function}\n * @decorator\n */\nexport function ResponseView(viewPath: string, viewOptions?: Object): Function {\n  return Store.decorate((store: Store) => {\n    store.set(ResponseViewMiddleware, {viewPath, viewOptions});\n\n    return UseAfter(ResponseViewMiddleware);\n  });\n}\n\n/**\n * Renders a view and sends the rendered HTML string to the client. Optional parameter:\n *\n * * viewOptions, an object whose properties define local variables for the view.\n *\n * The view argument is a string that is the file path of the view file to render.\n * This can be an absolute path, or a path relative to the views setting.\n * If the path does not contain a file extension, then the view engine setting determines the file extension.\n * If the path does contain a file extension, then Express will load the module for the specified template engine (via require())\n * and render it using the loaded module’s __express function.\n *\n * For more information, see [Using template engines with Express](http://expressjs.com/guide/using-template-engines.html).\n *\n * > NOTE: The view argument performs file system operations like reading a file from disk and evaluating Node.js modules,\n * and as so for security reasons should not contain input from the end-user.\n *\n * @param viewPath\n * @param viewOptions\n * @returns {Function}\n * @decorator\n * @alias ResponseView\n */\nexport function Render(viewPath: string, viewOptions?: Object): Function {\n  return ResponseView(viewPath, viewOptions);\n}\n"],"sourceRoot":"../../../../"}