import { InjectorService } from "../../di/services/InjectorService";
import { EndpointMetadata } from "./EndpointMetadata";
import { HandlerMetadata } from "./HandlerMetadata";
/**
 * @stable
 */
export declare class HandlerBuilder {
    private handlerMetadata;
    private filters;
    private _handler;
    private _rebuildHandler;
    private injector;
    private debug;
    constructor(handlerMetadata: HandlerMetadata);
    /**
     *
     * @param obj
     * @returns {HandlerBuilder}
     */
    static from(obj: any | EndpointMetadata): HandlerBuilder;
    /**
     *
     * @returns {any}
     */
    build(injector: InjectorService): (err: any, request: any, response: any, next: any) => Promise<any>;
    /**
     *
     * @param locals
     * @returns {any}
     */
    private buildHandler<T>(locals?);
    /**
     *
     */
    private getHandler();
    /**
     *
     * @returns {Promise<TResult2|TResult1>}
     * @param request
     * @param response
     * @param next
     * @param err
     */
    private invoke(request, response, next, err?);
    /**
     *
     * @param {Express.Request} request
     * @param o
     * @returns {string}
     */
    private log(request, o?);
    /**
     *
     * @param {Express.Request} request
     * @param {Express.Response} response
     * @param {Express.NextFunction} next
     * @returns {any}
     */
    private buildNext(request, response, next);
    /**
     *
     * @param request
     * @param response
     * @param next
     * @param err
     */
    private runFilters(request, response, next, err);
}
