"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const core_1 = require("@tsed/core");
const ProviderType_1 = require("../interfaces/ProviderType");
class Provider {
    constructor(_provide) {
        this._provide = _provide;
        this._type = ProviderType_1.ProviderType.PROVIDER;
        this._provide = core_1.getClass(this._provide);
        this._useClass = core_1.getClass(this._provide);
        this._store = core_1.Store.from(this._provide);
    }
    /**
     *
     * @returns {any}
     */
    get provide() {
        return this._provide;
    }
    /**
     *
     * @param value
     */
    set provide(value) {
        this._provide = value;
    }
    /**
     *
     * @returns {Type<T>}
     */
    get useClass() {
        return this._useClass || this._provide;
    }
    /**
     *
     * @param value
     */
    set useClass(value) {
        this._store = core_1.Store.from(value);
        this._useClass = value;
    }
    /**
     *
     * @returns {T}
     */
    get instance() {
        return this._instance;
    }
    /**
     *
     * @param value
     */
    set instance(value) {
        this._instance = value;
    }
    /**
     *
     * @returns {any}
     */
    get type() {
        return this._type;
    }
    /**
     *
     * @param value
     */
    set type(value) {
        this._type = value;
    }
    /**
     *
     * @returns {string}
     */
    get className() {
        return core_1.nameOf(this.provide);
    }
    /**
     *
     * @returns {Store}
     */
    get store() {
        return this._store;
    }
    /**
     * Get the scope of the provider.
     * @returns {boolean}
     */
    get scope() {
        return this.store.get("scope");
    }
    /**
     * Change the scope value of the provider.
     * @param scope
     */
    set scope(scope) {
        this.store.set("scope", scope);
    }
    clone() {
        const provider = new Provider(this._provide);
        provider._type = this._type;
        provider.useClass = this._useClass;
        provider._instance = this._instance;
        return provider;
    }
}
tslib_1.__decorate([
    core_1.NotEnumerable(),
    tslib_1.__metadata("design:type", core_1.Type)
], Provider.prototype, "_useClass", void 0);
tslib_1.__decorate([
    core_1.NotEnumerable(),
    tslib_1.__metadata("design:type", Object)
], Provider.prototype, "_instance", void 0);
tslib_1.__decorate([
    core_1.NotEnumerable(),
    tslib_1.__metadata("design:type", Object)
], Provider.prototype, "_type", void 0);
tslib_1.__decorate([
    core_1.NotEnumerable(),
    tslib_1.__metadata("design:type", core_1.Store)
], Provider.prototype, "_store", void 0);
exports.Provider = Provider;

//# sourceMappingURL=Provider.js.map
