"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var appender_1 = require("../decorators/appender");
var BaseAppender_1 = require("../class/BaseAppender");
/**
 * ## Standard Output Appender
 *
 * This appender writes all log events to the standard output stream.
 *
 * ## Configuration
 *
 * * type - stderr
 * * layout - object (optional, defaults to colouredLayout) - see layouts
 *
 * ## Example
 *
 * ```typescript
 * import {Logger} from "ts-log-debug";
 *
 * const logger = new Logger("loggerName");
 *
 * logger.appenders.set("log", {
 *     type: "stdout",
 *     levels: ["info", "trace", "debug"]
 * });
 * ```
 *
 * @private
 */
var StdoutAppender = /** @class */ (function (_super) {
    tslib_1.__extends(StdoutAppender, _super);
    function StdoutAppender() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.log = process.stdout.write.bind(process.stdout);
        return _this;
    }
    StdoutAppender.prototype.write = function (loggingEvent) {
        this.log(this.layout(loggingEvent, this.config.timezoneOffset) + "\n");
    };
    StdoutAppender = tslib_1.__decorate([
        appender_1.Appender({ name: "stdout" })
    ], StdoutAppender);
    return StdoutAppender;
}(BaseAppender_1.BaseAppender));
exports.StdoutAppender = StdoutAppender;
//# sourceMappingURL=StdoutAppender.js.map