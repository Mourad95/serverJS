{"version":3,"sources":["../src/common/di/class/Provider.ts"],"names":[],"mappings":";;;AAAA,qCAAwE;AAGxE,6DAAwD;AAExD;IASE,YAAsB,QAAa;QAAb,aAAQ,GAAR,QAAQ,CAAK;QAJR,UAAK,GAAuB,2BAAY,CAAC,QAAQ,CAAC;QAK3E,IAAI,CAAC,QAAQ,GAAG,eAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxC,IAAI,CAAC,SAAS,GAAG,eAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzC,IAAI,CAAC,MAAM,GAAG,YAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC1C,CAAC;IAED;;;OAGG;IACH,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED;;;OAGG;IACH,IAAI,OAAO,CAAC,KAAU;QACpB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IAED;;;OAGG;IACH,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,QAAQ,CAAC;IACzC,CAAC;IAED;;;OAGG;IACH,IAAI,QAAQ,CAAC,KAAc;QACzB,IAAI,CAAC,MAAM,GAAG,YAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED;;;OAGG;IACH,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED;;;OAGG;IACH,IAAI,QAAQ,CAAC,KAAQ;QACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED;;;OAGG;IACH,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED;;;OAGG;IACH,IAAI,IAAI,CAAC,KAAU;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAED;;;OAGG;IACH,IAAI,SAAS;QACX,OAAO,aAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;IAED;;;OAGG;IACH,IAAW,KAAK;QACd,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED;;;OAGG;IACH,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC;IAED;;;OAGG;IACH,IAAI,KAAK,CAAC,KAAoB;QAC5B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACjC,CAAC;IAED,KAAK;QACH,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7C,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAC5B,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;QACnC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAEpC,OAAO,QAAQ,CAAC;IAClB,CAAC;CACF;AAvHkB;IAAhB,oBAAa,EAAE;sCAAsB,WAAI;2CAAI;AAE7B;IAAhB,oBAAa,EAAE;;2CAAwB;AAEvB;IAAhB,oBAAa,EAAE;;uCAA6D;AAE5D;IAAhB,oBAAa,EAAE;sCAAiB,YAAK;wCAAC;AAPzC,4BAwHC","file":"Provider.js","sourcesContent":["import {getClass, nameOf, NotEnumerable, Store, Type} from \"@tsed/core\";\nimport {ProviderScope} from \"../interfaces\";\nimport {IProvider} from \"../interfaces/IProvider\";\nimport {ProviderType} from \"../interfaces/ProviderType\";\n\nexport class Provider<T> implements IProvider<T> {\n  @NotEnumerable() protected _useClass: Type<T>;\n\n  @NotEnumerable() protected _instance: T;\n\n  @NotEnumerable() protected _type: ProviderType | any = ProviderType.PROVIDER;\n\n  @NotEnumerable() private _store: Store;\n\n  constructor(protected _provide: any) {\n    this._provide = getClass(this._provide);\n    this._useClass = getClass(this._provide);\n    this._store = Store.from(this._provide);\n  }\n\n  /**\n   *\n   * @returns {any}\n   */\n  get provide(): any {\n    return this._provide;\n  }\n\n  /**\n   *\n   * @param value\n   */\n  set provide(value: any) {\n    this._provide = value;\n  }\n\n  /**\n   *\n   * @returns {Type<T>}\n   */\n  get useClass(): Type<T> {\n    return this._useClass || this._provide;\n  }\n\n  /**\n   *\n   * @param value\n   */\n  set useClass(value: Type<T>) {\n    this._store = Store.from(value);\n    this._useClass = value;\n  }\n\n  /**\n   *\n   * @returns {T}\n   */\n  get instance(): T {\n    return this._instance;\n  }\n\n  /**\n   *\n   * @param value\n   */\n  set instance(value: T) {\n    this._instance = value;\n  }\n\n  /**\n   *\n   * @returns {any}\n   */\n  get type(): any {\n    return this._type;\n  }\n\n  /**\n   *\n   * @param value\n   */\n  set type(value: any) {\n    this._type = value;\n  }\n\n  /**\n   *\n   * @returns {string}\n   */\n  get className() {\n    return nameOf(this.provide);\n  }\n\n  /**\n   *\n   * @returns {Store}\n   */\n  public get store(): Store {\n    return this._store;\n  }\n\n  /**\n   * Get the scope of the provider.\n   * @returns {boolean}\n   */\n  get scope(): ProviderScope {\n    return this.store.get(\"scope\");\n  }\n\n  /**\n   * Change the scope value of the provider.\n   * @param scope\n   */\n  set scope(scope: ProviderScope) {\n    this.store.set(\"scope\", scope);\n  }\n\n  clone(): Provider<any> {\n    const provider = new Provider(this._provide);\n    provider._type = this._type;\n    provider.useClass = this._useClass;\n    provider._instance = this._instance;\n\n    return provider;\n  }\n}\n"],"sourceRoot":"../../../"}