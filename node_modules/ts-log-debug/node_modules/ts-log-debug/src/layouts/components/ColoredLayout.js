"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * @module layouts
 */
/** */
var inpectUtils_1 = require("../utils/inpectUtils");
var timestampLevelAndCategory_1 = require("../utils/timestampLevelAndCategory");
var logColors_1 = require("../constants/logColors");
var layout_1 = require("../decorators/layout");
var BaseLayout_1 = require("../class/BaseLayout");
var ColoredLayout = /** @class */ (function (_super) {
    __extends(ColoredLayout, _super);
    function ColoredLayout() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * colouredLayout - taken from masylum's fork.
     * same as basicLayout, but with colours.
     */
    ColoredLayout.prototype.transform = function (loggingEvent, timezoneOffset) {
        return timestampLevelAndCategory_1.timestampLevelAndCategory(loggingEvent, logColors_1.LOG_COLORS[loggingEvent.level.toString()], timezoneOffset) + inpectUtils_1.formatLogData(loggingEvent.data);
    };
    ColoredLayout = __decorate([
        layout_1.Layout({ name: "colored" })
    ], ColoredLayout);
    return ColoredLayout;
}(BaseLayout_1.BaseLayout));
exports.ColoredLayout = ColoredLayout;
//# sourceMappingURL=ColoredLayout.js.map