import { InjectorService } from "../../di/services/InjectorService";
import { IControllerRoute } from "../interfaces";
/**
 * `RouteService` is used to provide all routes collected by annotation `@ControllerProvider`.
 */
export declare class RouteService {
    private injectorService;
    private readonly _routes;
    constructor(injectorService: InjectorService);
    /**
     *
     * @returns {{route: string; provider: any}[]}
     */
    readonly routes: {
        route: string;
        provider: any;
    }[];
    $afterRoutesInit(): void;
    /**
     *
     * @returns {number}
     * @param route
     */
    addRoute(route: {
        route: string;
        provider: any;
    }): number;
    /**
     * Get all routes built by TsExpressDecorators and mounted on Express application.
     * @returns {IControllerRoute[]}
     */
    getRoutes(): IControllerRoute[];
    /**
     *
     * @param routes
     * @param ctrl
     * @param endpointUrl
     */
    private buildRoutes(routes, ctrl, endpointUrl);
    /**
     * Print all route mounted in express via Annotation.
     */
    printRoutes(logger?: {
        info: (s: any) => void;
    }): void;
    /**
     * Return all Routes stored in ControllerProvider manager.
     * @returns {IControllerRoute[]}
     */
    getAll(): IControllerRoute[];
}
