{"version":3,"sources":["../src/common/mvc/decorators/method/useBefore.ts"],"names":[],"mappings":";;AAAA,qCAAyD;AACzD,wEAAmE;AAEnE;;;;;;;;;;;;;;;;;;GAkBG;AACH,mBAA0B,GAAG,IAAW;IACtC,OAAO,CAAI,MAAiB,EAAE,SAAkB,EAAE,UAAuC,EAAqC,EAAE;QAC9H,IAAI,uBAAgB,CAAC,CAAC,MAAM,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC,KAAK,QAAQ,EAAE;YAClE,mCAAgB,CAAC,SAAS,CAAC,MAAM,EAAE,SAAU,EAAE,IAAI,CAAC,CAAC;YAErD,OAAO,UAAU,CAAC;SACnB;QAED,YAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,aAAa,EAAE;YACtC,SAAS,EAAE,IAAI;SAChB,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC;AAZD,8BAYC","file":"useBefore.js","sourcesContent":["import {getDecoratorType, Store, Type} from \"@tsed/core\";\nimport {EndpointRegistry} from \"../../registries/EndpointRegistry\";\n\n/**\n * Mounts the specified middleware function or functions at the specified path: the middleware function is executed when\n * the base of the requested path matches `path.\n *\n * ```typescript\n * @Controller('/')\n * @UseBefore(Middleware1)\n * export class Ctrl {\n *\n *    @Get('/')\n *    @UseBefore(Middleware2)\n *    get() { }\n * }\n * ```\n *\n * @returns {function(any, any, any): *}\n * @param args\n * @decorator\n */\nexport function UseBefore(...args: any[]): Function {\n  return <T>(target: Type<any>, targetKey?: string, descriptor?: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T> | void => {\n    if (getDecoratorType([target, targetKey, descriptor]) === \"method\") {\n      EndpointRegistry.useBefore(target, targetKey!, args);\n\n      return descriptor;\n    }\n\n    Store.from(target).merge(\"middlewares\", {\n      useBefore: args\n    });\n  };\n}\n"],"sourceRoot":"../../../../"}