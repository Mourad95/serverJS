{"version":3,"sources":["../src/common/mvc/decorators/class/routerSettings.ts"],"names":[],"mappings":";;AACA,qCAAiC;AAEjC;;;;;;;;;;;;;;;;;;;;;GAqBG;AACH,wBAA+B,aAA8B;IAC3D,OAAO,YAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;QAC5B,KAAK,CAAC,KAAK,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;AACL,CAAC;AAJD,wCAIC","file":"routerSettings.js","sourcesContent":["import {IRouterSettings} from \"../../../config/interfaces/IServerSettings\";\nimport {Store} from \"@tsed/core\";\n\n/**\n * Specify the behavior of the router controller.\n *\n * ```typescript\n * @Controller(\"/\")\n * @RouterSettings({mergeParams: true})\n * class MyCtrl {\n *\n * }\n * ```\n *\n * Property | Description | Default\n * ---|---|---\n * caseSensitive | Enable case sensitivity. | Disabled by default, treating “/Foo” and “/foo” as the same.\n * mergeParams | Preserve the req.params values from the parent router. If the parent and the child have conflicting param names, the child’s value take precedence. | false\n * strict | Enable strict routing. | Disabled by default, “/foo” and “/foo/” are treated the same by the router.\n *\n * @returns {(target:any)=>void}\n * @decorator\n * @param routerOptions\n * @express\n */\nexport function RouterSettings(routerOptions: IRouterSettings): Function {\n  return Store.decorate(store => {\n    store.merge(\"routerOptions\", routerOptions);\n  });\n}\n"],"sourceRoot":"../../../../"}