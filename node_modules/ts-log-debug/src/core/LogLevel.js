"use strict";
/**
 * @module core
 */
/** */
Object.defineProperty(exports, "__esModule", { value: true });
var LogLevel = /** @class */ (function () {
    function LogLevel(level, levelStr) {
        this.level = level;
        this.levelStr = levelStr;
        this.level = level;
        this.levelStr = levelStr;
    }
    LogLevel.getLevel = function (sArg, defaultLevel) {
        if (sArg instanceof LogLevel) {
            return sArg;
        }
        if (typeof sArg === "string") {
            var index = sArg.toUpperCase();
            return DEFAULT_LOG_LEVELS[index] || defaultLevel;
        }
        return this.getLevel(sArg.toString());
    };
    LogLevel.prototype.toString = function () {
        return this.levelStr;
    };
    LogLevel.prototype.isLessThanOrEqualTo = function (otherLevel) {
        if (typeof otherLevel === "string") {
            otherLevel = LogLevel.getLevel(otherLevel);
        }
        return this.level <= otherLevel.level;
    };
    LogLevel.prototype.isGreaterThanOrEqualTo = function (otherLevel) {
        if (typeof otherLevel === "string") {
            otherLevel = LogLevel.getLevel(otherLevel);
        }
        return this.level >= otherLevel.level;
    };
    LogLevel.prototype.isEqualTo = function (otherLevel) {
        if (typeof otherLevel === "string") {
            otherLevel = LogLevel.getLevel(otherLevel);
        }
        return this.level === otherLevel.level;
    };
    return LogLevel;
}());
exports.LogLevel = LogLevel;
var DEFAULT_LOG_LEVELS = {
    ALL: new LogLevel(Number.MIN_VALUE, "ALL"),
    TRACE: new LogLevel(5000, "TRACE"),
    DEBUG: new LogLevel(10000, "DEBUG"),
    INFO: new LogLevel(20000, "INFO"),
    WARN: new LogLevel(30000, "WARN"),
    ERROR: new LogLevel(40000, "ERROR"),
    FATAL: new LogLevel(50000, "FATAL"),
    MARK: new LogLevel(9007199254740992, "MARK"),
    OFF: new LogLevel(Number.MAX_VALUE, "OFF")
};
function levels() {
    return DEFAULT_LOG_LEVELS;
}
exports.levels = levels;
//# sourceMappingURL=LogLevel.js.map