{"version":3,"sources":["../src/common/mvc/decorators/method/acceptMime.ts"],"names":[],"mappings":";;AAAA,qCAAsD;AACtD,kFAA6E;AAC7E,2CAAsC;AAEtC;;;;;;;;;;;;;;;;GAgBG;AACH,oBAA2B,GAAG,KAAe;IAC3C,OAAO,YAAK,CAAC,QAAQ,CAAC,CAAC,KAAY,EAAE,UAA+B,EAAE,EAAE;QACtE,KAAK,CAAC,GAAG,CAAC,6CAAqB,EAAE,KAAK,CAAC,CAAC;QAExC,OAAO,qBAAS,CAAC,6CAAqB,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;AACL,CAAC;AAND,gCAMC","file":"acceptMime.js","sourcesContent":["import {DecoratorParameters, Store} from \"@tsed/core\";\nimport {AcceptMimesMiddleware} from \"../../components/AcceptMimesMiddleware\";\nimport {UseBefore} from \"./useBefore\";\n\n/**\n * Set a mime list as acceptable for a request on a specific endpoint.\n *\n * ```typescript\n *  @ControllerProvider('/mypath')\n *  provide MyCtrl {\n *\n *    @Get('/')\n *    @AcceptMime('application/json')\n *    public getResource(){}\n *  }\n * ```\n *\n * @param mimes\n * @returns {Function}\n * @decorator\n */\nexport function AcceptMime(...mimes: string[]): Function {\n  return Store.decorate((store: Store, parameters: DecoratorParameters) => {\n    store.set(AcceptMimesMiddleware, mimes);\n\n    return UseBefore(AcceptMimesMiddleware);\n  });\n}\n"],"sourceRoot":"../../../../"}