{"version":3,"sources":["../src/common/mvc/decorators/method/location.ts"],"names":[],"mappings":";;AAAA,yCAAoC;AAEpC;;;;;;;;;;;;;;;;;GAiBG;AACH,kBAAyB,QAAgB;IACvC,OAAO,CAAI,MAAgB,EAAE,SAAiB,EAAE,UAAsC,EAA8B,EAAE;QACpH,OAAO,mBAAQ,CAAC,CAAC,OAAY,EAAE,QAAa,EAAE,IAAS,EAAE,EAAE;YACzD,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAE5B,IAAI,EAAE,CAAC;QACT,CAAC,CAAC,CAAC,MAAM,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;IACpC,CAAC,CAAC;AACJ,CAAC;AARD,4BAQC","file":"location.js","sourcesContent":["import {UseAfter} from \"./useAfter\";\n\n/**\n * Sets the response Location HTTP header to the specified path parameter.\n *\n * ```typescript\n *  @Location('/foo/bar')\n *  @Location('http://example.com')\n *  @Location('back')\n *  private myMethod() {\n *\n *  }\n * ```\n *\n * A path value of “back” has a special meaning, it refers to the URL specified in the `Referer` header of the request. If the `Referer` header was not specified, it refers to “/”.\n *\n * @param location\n * @returns {Function}\n * @decorator\n */\nexport function Location(location: string): Function {\n  return <T>(target: Function, targetKey: string, descriptor: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T> => {\n    return UseAfter((request: any, response: any, next: any) => {\n      response.location(location);\n\n      next();\n    })(target, targetKey, descriptor);\n  };\n}\n"],"sourceRoot":"../../../../"}